{"mappings":"8xBAGA,IAUaA,c,QASXA,EAAA,SAAAC,G,MAAcC,QAAKC,YAASC,eAAYC,aAAUC,sB,OAChDC,EAAAC,EAAAC,KAAAC,KAAM,CAAEJ,kBAAmBA,KAArBI,MAEDR,IAAMA,EACXK,EAAKJ,QAAUA,EACfI,EAAKH,WAAaA,EAClBG,EAAKF,SAAWA,IAAY,EAE5BE,EAAKI,mBAAqBJ,EAAKI,mBAAmBC,KAAxBC,EAAAN,IAC1BA,EAAKO,sBAAwBP,EAAKO,sBAAsBF,KAA3BC,EAAAN,I,CAC9B,E,EAnBHC,G,EAAAR,G,sEAAA,IAAAe,EAAAf,EAAAgB,UAAA,OAAAD,EAqBeE,SArBf,eAyBM,IAAAC,EAAAR,K,aAWqB,OAAAS,QAAAC,QAAAF,EAAKG,SAASC,QAAQ,CAC3CC,OAAQ,yBADaC,MAAA,SAAjBC,GAGN,IAAMC,EAAUD,EAAS,GAKzB,OAHAP,EAAKG,SAASM,GAAG,eAAgBT,EAAKP,oBACtCO,EAAKG,SAASM,GAAG,kBAAmBT,EAAKJ,uBAElC,CAAEO,SAAUH,EAAKG,SAAUK,QAASA,E,kBArBvCE,UAAOC,WAAiD,IAArCD,OAAOC,SAASC,iBAErCZ,EAAKG,SAAWO,OAAOC,a,kBACd,IAACX,EAAKa,WACiB,OAAAZ,QAAAC,QAAAY,EAAA,SAA+BR,MAAK,SAAAS,GAAC,IAAAC,EAAA,cAAAA,EAAA,MAAID,OAAJ,EAAIA,EAAC,SAALC,EAAkBD,CAAlB,KAArCT,MAAA,SAA1BW,GACNjB,EAAKa,WAAa,IAAII,EAAtBC,EAAA,CACEjC,QAASe,EAAKf,QACdE,SAAUa,EAAKb,UACXa,EAAKd,WAAa,CAAEA,WAAYc,EAAKd,YAAe,KAE1Dc,EAAKG,SAAWH,EAAKa,WAAWM,iBAAiBnB,EAAKhB,IA3C3C,E,qGAUjB,CA6CG,MAAAoC,GA7CH,OAAAnB,QAAAoB,OAAAD,EAAA,GAAAvB,EA+CeyB,YA/Cf,eAgDI,OAAArB,QAAAC,QAAOV,KAAKW,SAhDhB,CAiDG,MAAAiB,GAjDH,OAAAnB,QAAAoB,OAAAD,EAAA,GAAAvB,EAmDe0B,WAnDf,eAoDI,OAAAtB,QAAAC,QAAOV,KAAKW,SAASqB,QApDzB,CAqDG,MAAAJ,GArDH,OAAAnB,QAAAoB,OAAAD,EAAA,GAAAvB,EAuDe4B,WAvDf,eAwD2B,OAAAxB,QAAAC,QAAAV,KAAKW,SAASC,QAAQ,CAC3CC,OAAQ,yBADaC,MAAA,SAAjBC,GAGN,OAAOA,EAAS,E,GA3DpB,CA4DG,MAAAa,GA5DH,OAAAnB,QAAAoB,OAAAD,EAAA,GAAAvB,EA8DS6B,WAAA,WACLlC,KAAKW,SAASwB,eAAe,eAAgBnC,KAAKC,oBAClDD,KAAKW,SAASwB,eAAe,kBAAmBnC,KAAKI,sBACtD,EAjEHC,EAmEe+B,MAnEf,e,OAoEIpC,KAAKW,SAASyB,QAAdpC,KACKqC,iB,iBArET,CAsEG,MAAAT,GAtEH,OAAAnB,QAAAoB,OAAAD,EAAA,GAAAvB,EAwEUJ,mBAAA,SAAmB+B,GAIzBhC,KAAKsC,WAAW,CAAEN,QAASA,GAC5B,EA7EH3B,EA+EUD,sBAAA,SAAsBW,GAI5Bf,KAAKsC,WAAW,CAAEtB,QAASD,EAAS,IACrC,EApFHzB,CAAA,CAAaA,CAA4BiD,oB,sCCbzCC,EAAAC,QAAkBnB,EAAA,QAAD,CAAwCA,EAAA,SAAAoB,aAA6C,SAAWpB,EAAA,SAAAZ,QAA6C,UAAWI,MAAK,W,OAAMQ,EAAc,Q","sources":["node_modules/@web3-react/walletlink-connector/src/index.ts","node_modules/@parcel/runtime-js/lib/runtime-a18e05c6e4de1e5b.js"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst CHAIN_ID = 1\n\ninterface WalletLinkConnectorArguments {\n  url: string\n  appName: string\n  appLogoUrl?: string\n  darkMode?: boolean\n  supportedChainIds?: number[]\n}\n\nexport class WalletLinkConnector extends AbstractConnector {\n  private readonly url: string\n  private readonly appName: string\n  private readonly appLogoUrl?: string\n  private readonly darkMode: boolean\n\n  public walletLink: any\n  private provider: any\n\n  constructor({ url, appName, appLogoUrl, darkMode, supportedChainIds }: WalletLinkConnectorArguments) {\n    super({ supportedChainIds: supportedChainIds })\n\n    this.url = url\n    this.appName = appName\n    this.appLogoUrl = appLogoUrl\n    this.darkMode = darkMode || false\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    // @ts-ignore\n    if (window.ethereum && window.ethereum.isCoinbaseWallet === true) {\n      // user is in the dapp browser on Coinbase Wallet\n      this.provider = window.ethereum\n    } else if (!this.walletLink) {\n      const CoinbaseWalletSDK = await import('@coinbase/wallet-sdk').then(m => m?.default ?? m)\n      this.walletLink = new CoinbaseWalletSDK({\n        appName: this.appName,\n        darkMode: this.darkMode,\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\n      })\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\n    }\n\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    const account = accounts[0]\n\n    this.provider.on('chainChanged', this.handleChainChanged)\n    this.provider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.provider, account: account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    const accounts = await this.provider.request({\n      method: 'eth_requestAccounts'\n    })\n    return accounts[0]\n  }\n\n  public deactivate() {\n    this.provider.removeListener('chainChanged', this.handleChainChanged)\n    this.provider.removeListener('accountsChanged', this.handleAccountsChanged)\n  }\n\n  public async close() {\n    this.provider.close()\n    this.emitDeactivate()\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId: chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n}\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('3kfYm') + require('./helpers/bundle-manifest').resolve(\"5RgLO\"))).then(() => parcelRequire('XVuKO'));"],"names":["WalletLinkConnector","_ref","url","appName","appLogoUrl","darkMode","supportedChainIds","_this","_AbstractConnector","call","this","handleChainChanged","bind","$9ad57af825feddb6$var$_assertThisInitialized","handleAccountsChanged","_proto","prototype","activate","_this3","Promise","resolve","provider","request","method","then","accounts","account","on","window","ethereum","isCoinbaseWallet","walletLink","parcelRequire","m","_m$default","CoinbaseWalletSDK","$9ad57af825feddb6$var$_extends","makeWeb3Provider","e","reject","getProvider","getChainId","chainId","getAccount","deactivate","removeListener","close","emitDeactivate","emitUpdate","AbstractConnector","module","exports","getBundleURL"],"version":3,"file":"walletlink-connector.esm.5696eee2.js.map"}